// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: stream.proto

#include "stream.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_stream_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_stream_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Parameter;
}  // namespace protobuf_stream_2eproto
namespace gpss {
class EmptyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Empty>
      _instance;
} _Empty_default_instance_;
class StreamMessagesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<StreamMessages>
      _instance;
} _StreamMessages_default_instance_;
class ParameterDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Parameter>
      _instance;
} _Parameter_default_instance_;
class ConsumeRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ConsumeRequest>
      _instance;
} _ConsumeRequest_default_instance_;
}  // namespace gpss
namespace protobuf_stream_2eproto {
static void InitDefaultsEmpty() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gpss::_Empty_default_instance_;
    new (ptr) ::gpss::Empty();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gpss::Empty::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Empty =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsEmpty}, {}};

static void InitDefaultsStreamMessages() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gpss::_StreamMessages_default_instance_;
    new (ptr) ::gpss::StreamMessages();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gpss::StreamMessages::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_StreamMessages =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsStreamMessages}, {}};

static void InitDefaultsParameter() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gpss::_Parameter_default_instance_;
    new (ptr) ::gpss::Parameter();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gpss::Parameter::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Parameter =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsParameter}, {}};

static void InitDefaultsConsumeRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gpss::_ConsumeRequest_default_instance_;
    new (ptr) ::gpss::ConsumeRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gpss::ConsumeRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_ConsumeRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsConsumeRequest}, {
      &protobuf_stream_2eproto::scc_info_Parameter.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Empty.base);
  ::google::protobuf::internal::InitSCC(&scc_info_StreamMessages.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Parameter.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ConsumeRequest.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::StreamMessages, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::StreamMessages, messages_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::Parameter, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::Parameter, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, xid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, cid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, sn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, segmentid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, segmentcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::gpss::ConsumeRequest, parameters_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gpss::Empty)},
  { 5, -1, sizeof(::gpss::StreamMessages)},
  { 11, -1, sizeof(::gpss::Parameter)},
  { 18, -1, sizeof(::gpss::ConsumeRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::gpss::_Empty_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gpss::_StreamMessages_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gpss::_Parameter_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::gpss::_ConsumeRequest_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "stream.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\014stream.proto\022\004gpss\"\007\n\005Empty\"\"\n\016StreamM"
      "essages\022\020\n\010Messages\030\001 \003(\014\"\'\n\tParameter\022\013"
      "\n\003Key\030\001 \001(\t\022\r\n\005Value\030\002 \001(\t\"\227\001\n\016ConsumeRe"
      "quest\022\013\n\003XID\030\001 \001(\t\022\013\n\003CID\030\002 \001(\005\022\n\n\002SN\030\003 "
      "\001(\005\022\021\n\tSegmentID\030\004 \001(\005\022\024\n\014SegmentCount\030\005"
      " \001(\005\022\021\n\tSessionID\030\006 \001(\005\022#\n\nParameters\030\007 "
      "\003(\0132\017.gpss.Parameter2R\n\025GreenplumStreamS"
      "erver\0229\n\007Consume\022\024.gpss.ConsumeRequest\032\024"
      ".gpss.StreamMessages\"\0000\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 352);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "stream.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_stream_2eproto
namespace gpss {

// ===================================================================

void Empty::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Empty::Empty()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stream_2eproto::scc_info_Empty.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gpss.Empty)
}
Empty::Empty(const Empty& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gpss.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:gpss.Empty)
  SharedDtor();
}

void Empty::SharedDtor() {
}

void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Empty::descriptor() {
  ::protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Empty& Empty::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stream_2eproto::scc_info_Empty.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:gpss.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Empty::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gpss.Empty)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:gpss.Empty)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gpss.Empty)
  return false;
#undef DO_
}

void Empty::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gpss.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gpss.Empty)
}

::google::protobuf::uint8* Empty::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gpss.Empty)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpss.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpss.Empty)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gpss.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Empty>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gpss.Empty)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gpss.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gpss.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gpss.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpss.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::Swap(Empty* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Empty::GetMetadata() const {
  protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void StreamMessages::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StreamMessages::kMessagesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StreamMessages::StreamMessages()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stream_2eproto::scc_info_StreamMessages.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gpss.StreamMessages)
}
StreamMessages::StreamMessages(const StreamMessages& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      messages_(from.messages_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gpss.StreamMessages)
}

void StreamMessages::SharedCtor() {
}

StreamMessages::~StreamMessages() {
  // @@protoc_insertion_point(destructor:gpss.StreamMessages)
  SharedDtor();
}

void StreamMessages::SharedDtor() {
}

void StreamMessages::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* StreamMessages::descriptor() {
  ::protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StreamMessages& StreamMessages::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stream_2eproto::scc_info_StreamMessages.base);
  return *internal_default_instance();
}


void StreamMessages::Clear() {
// @@protoc_insertion_point(message_clear_start:gpss.StreamMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  messages_.Clear();
  _internal_metadata_.Clear();
}

bool StreamMessages::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gpss.StreamMessages)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes Messages = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_messages()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gpss.StreamMessages)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gpss.StreamMessages)
  return false;
#undef DO_
}

void StreamMessages::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gpss.StreamMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes Messages = 1;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->messages(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gpss.StreamMessages)
}

::google::protobuf::uint8* StreamMessages::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gpss.StreamMessages)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated bytes Messages = 1;
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->messages(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpss.StreamMessages)
  return target;
}

size_t StreamMessages::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpss.StreamMessages)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated bytes Messages = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->messages_size());
  for (int i = 0, n = this->messages_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->messages(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamMessages::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gpss.StreamMessages)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamMessages* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const StreamMessages>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gpss.StreamMessages)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gpss.StreamMessages)
    MergeFrom(*source);
  }
}

void StreamMessages::MergeFrom(const StreamMessages& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gpss.StreamMessages)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  messages_.MergeFrom(from.messages_);
}

void StreamMessages::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gpss.StreamMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamMessages::CopyFrom(const StreamMessages& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpss.StreamMessages)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamMessages::IsInitialized() const {
  return true;
}

void StreamMessages::Swap(StreamMessages* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StreamMessages::InternalSwap(StreamMessages* other) {
  using std::swap;
  messages_.InternalSwap(CastToBase(&other->messages_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata StreamMessages::GetMetadata() const {
  protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Parameter::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Parameter::kKeyFieldNumber;
const int Parameter::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Parameter::Parameter()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stream_2eproto::scc_info_Parameter.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gpss.Parameter)
}
Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.key().size() > 0) {
    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:gpss.Parameter)
}

void Parameter::SharedCtor() {
  key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:gpss.Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Parameter::descriptor() {
  ::protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Parameter& Parameter::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stream_2eproto::scc_info_Parameter.base);
  return *internal_default_instance();
}


void Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:gpss.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gpss.Parameter)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string Key = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_key()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->key().data(), static_cast<int>(this->key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gpss.Parameter.Key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gpss.Parameter.Value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gpss.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gpss.Parameter)
  return false;
#undef DO_
}

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gpss.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gpss.Parameter.Key");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->key(), output);
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gpss.Parameter.Value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gpss.Parameter)
}

::google::protobuf::uint8* Parameter::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gpss.Parameter)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string Key = 1;
  if (this->key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->key().data(), static_cast<int>(this->key().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gpss.Parameter.Key");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->key(), target);
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gpss.Parameter.Value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpss.Parameter)
  return target;
}

size_t Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpss.Parameter)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string Key = 1;
  if (this->key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->key());
  }

  // string Value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Parameter::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gpss.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Parameter* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Parameter>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gpss.Parameter)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gpss.Parameter)
    MergeFrom(*source);
  }
}

void Parameter::MergeFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gpss.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.key().size() > 0) {

    key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.key_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void Parameter::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gpss.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parameter::CopyFrom(const Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpss.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter::IsInitialized() const {
  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Parameter::InternalSwap(Parameter* other) {
  using std::swap;
  key_.Swap(&other->key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Parameter::GetMetadata() const {
  protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ConsumeRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ConsumeRequest::kXIDFieldNumber;
const int ConsumeRequest::kCIDFieldNumber;
const int ConsumeRequest::kSNFieldNumber;
const int ConsumeRequest::kSegmentIDFieldNumber;
const int ConsumeRequest::kSegmentCountFieldNumber;
const int ConsumeRequest::kSessionIDFieldNumber;
const int ConsumeRequest::kParametersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ConsumeRequest::ConsumeRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_stream_2eproto::scc_info_ConsumeRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:gpss.ConsumeRequest)
}
ConsumeRequest::ConsumeRequest(const ConsumeRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parameters_(from.parameters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  xid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xid().size() > 0) {
    xid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xid_);
  }
  ::memcpy(&cid_, &from.cid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&cid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:gpss.ConsumeRequest)
}

void ConsumeRequest::SharedCtor() {
  xid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&cid_)) + sizeof(sessionid_));
}

ConsumeRequest::~ConsumeRequest() {
  // @@protoc_insertion_point(destructor:gpss.ConsumeRequest)
  SharedDtor();
}

void ConsumeRequest::SharedDtor() {
  xid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ConsumeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ConsumeRequest::descriptor() {
  ::protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ConsumeRequest& ConsumeRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_stream_2eproto::scc_info_ConsumeRequest.base);
  return *internal_default_instance();
}


void ConsumeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:gpss.ConsumeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  xid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&cid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&cid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool ConsumeRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:gpss.ConsumeRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string XID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xid().data(), static_cast<int>(this->xid().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "gpss.ConsumeRequest.XID"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 CID = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &cid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SN = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sn_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SegmentID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segmentid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SegmentCount = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &segmentcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 SessionID = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .gpss.Parameter Parameters = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_parameters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:gpss.ConsumeRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:gpss.ConsumeRequest)
  return false;
#undef DO_
}

void ConsumeRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:gpss.ConsumeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string XID = 1;
  if (this->xid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xid().data(), static_cast<int>(this->xid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gpss.ConsumeRequest.XID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->xid(), output);
  }

  // int32 CID = 2;
  if (this->cid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->cid(), output);
  }

  // int32 SN = 3;
  if (this->sn() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->sn(), output);
  }

  // int32 SegmentID = 4;
  if (this->segmentid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->segmentid(), output);
  }

  // int32 SegmentCount = 5;
  if (this->segmentcount() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->segmentcount(), output);
  }

  // int32 SessionID = 6;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->sessionid(), output);
  }

  // repeated .gpss.Parameter Parameters = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7,
      this->parameters(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:gpss.ConsumeRequest)
}

::google::protobuf::uint8* ConsumeRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:gpss.ConsumeRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string XID = 1;
  if (this->xid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xid().data(), static_cast<int>(this->xid().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "gpss.ConsumeRequest.XID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->xid(), target);
  }

  // int32 CID = 2;
  if (this->cid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->cid(), target);
  }

  // int32 SN = 3;
  if (this->sn() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->sn(), target);
  }

  // int32 SegmentID = 4;
  if (this->segmentid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->segmentid(), target);
  }

  // int32 SegmentCount = 5;
  if (this->segmentcount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->segmentcount(), target);
  }

  // int32 SessionID = 6;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->sessionid(), target);
  }

  // repeated .gpss.Parameter Parameters = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->parameters_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->parameters(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gpss.ConsumeRequest)
  return target;
}

size_t ConsumeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gpss.ConsumeRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .gpss.Parameter Parameters = 7;
  {
    unsigned int count = static_cast<unsigned int>(this->parameters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->parameters(static_cast<int>(i)));
    }
  }

  // string XID = 1;
  if (this->xid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xid());
  }

  // int32 CID = 2;
  if (this->cid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->cid());
  }

  // int32 SN = 3;
  if (this->sn() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sn());
  }

  // int32 SegmentID = 4;
  if (this->segmentid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segmentid());
  }

  // int32 SegmentCount = 5;
  if (this->segmentcount() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->segmentcount());
  }

  // int32 SessionID = 6;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConsumeRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gpss.ConsumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ConsumeRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ConsumeRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gpss.ConsumeRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gpss.ConsumeRequest)
    MergeFrom(*source);
  }
}

void ConsumeRequest::MergeFrom(const ConsumeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gpss.ConsumeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.xid().size() > 0) {

    xid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xid_);
  }
  if (from.cid() != 0) {
    set_cid(from.cid());
  }
  if (from.sn() != 0) {
    set_sn(from.sn());
  }
  if (from.segmentid() != 0) {
    set_segmentid(from.segmentid());
  }
  if (from.segmentcount() != 0) {
    set_segmentcount(from.segmentcount());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void ConsumeRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gpss.ConsumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConsumeRequest::CopyFrom(const ConsumeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gpss.ConsumeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConsumeRequest::IsInitialized() const {
  return true;
}

void ConsumeRequest::Swap(ConsumeRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ConsumeRequest::InternalSwap(ConsumeRequest* other) {
  using std::swap;
  CastToBase(&parameters_)->InternalSwap(CastToBase(&other->parameters_));
  xid_.Swap(&other->xid_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(cid_, other->cid_);
  swap(sn_, other->sn_);
  swap(segmentid_, other->segmentid_);
  swap(segmentcount_, other->segmentcount_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ConsumeRequest::GetMetadata() const {
  protobuf_stream_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_stream_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gpss
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gpss::Empty* Arena::CreateMaybeMessage< ::gpss::Empty >(Arena* arena) {
  return Arena::CreateInternal< ::gpss::Empty >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gpss::StreamMessages* Arena::CreateMaybeMessage< ::gpss::StreamMessages >(Arena* arena) {
  return Arena::CreateInternal< ::gpss::StreamMessages >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gpss::Parameter* Arena::CreateMaybeMessage< ::gpss::Parameter >(Arena* arena) {
  return Arena::CreateInternal< ::gpss::Parameter >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::gpss::ConsumeRequest* Arena::CreateMaybeMessage< ::gpss::ConsumeRequest >(Arena* arena) {
  return Arena::CreateInternal< ::gpss::ConsumeRequest >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
